name: deploy

on:
    push:
        branches:
            - main
        paths:
            - '.github/workflows/deploy.yaml'
            - 'src/**/*.ts'
            - package.json
            - Dockerfile
    workflow_dispatch:

env:
    AWS_REGION: ap-northeast-1
    AWS_ROLE_NAME: keikoba-line-push-notification-github-actions-ecr-push-role
    ADMIN_LAMBDA_FUNCTION_NAME: KeikobaManagerBot_AdminApi
    LINE_MANAGER_FUNCTION_NAME: KeikobaManagerBot_LineManagerBot
    LINE_NOTIFICATION_FUNCTION_NAME: KeikobaManagerBot_LineNotification
    REPOSITORY_NAME: ${{ secrets.REPOSITORY_NAME }}

jobs:
    deploy:
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            contents: read

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ env.AWS_ROLE_NAME }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2

            - name: build and push docker image
              uses: docker/build-push-action@v6
              id: build-image
              with:
                  push: true
                  file: ./Dockerfile
                  tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.REPOSITORY_NAME }}:${{ github.sha }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  provenance: false
                  platforms: linux/arm64

            - name: deploy lambda functions
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
              run: |
                  aws lambda update-function-code --function-name ${{ env.ADMIN_LAMBDA_FUNCTION_NAME }} --image-uri $ECR_REGISTRY/${{ env.REPOSITORY_NAME }}:${{ github.sha }}
                  aws lambda update-function-code --function-name ${{ env.LINE_MANAGER_FUNCTION_NAME }} --image-uri $ECR_REGISTRY/${{ env.REPOSITORY_NAME }}:${{ github.sha }}
                  aws lambda update-function-code --function-name ${{ env.LINE_NOTIFICATION_FUNCTION_NAME }} --image-uri $ECR_REGISTRY/${{ env.REPOSITORY_NAME }}:${{ github.sha }}
