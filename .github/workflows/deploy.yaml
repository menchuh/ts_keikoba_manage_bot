# name: deploy

# on:
#     push:
#         branches:
#             - main
#         paths:
#             - '.github/workflows/deploy.yaml'
#             - 'src/**/*.ts'
#             - package.json
#     workflow_dispatch:

# env:
#     AWS_REGION: ap-northeast-1
#     AWS_ROLE_NAME: keikoba-line-push-notification-github-actions-ecr-push-role
#     LAMBDA_FUNCTION_NAME: ${{ secrets.SERVICE_NAME }}

# jobs:
#     build:
#         name: Build and Deploy
#         runs-on: ubuntu-latest
#         permissions:
#             id-token: write
#             contents: read

#         steps:
#             - name: Checkout
#               uses: actions/checkout@v4

#             - name: Set up Docker Buildx
#               uses: docker/setup-buildx-action@v1

#             - name: Cache Docker layers
#               uses: actions/cache@v2
#               with:
#                   path: /tmp/.buildx-cache
#                   key: ${{ runner.os }}-buildx-${{ github.sha }}
#                   restore-keys: |
#                       ${{ runner.os }}-buildx-

#             - name: Configure AWS credentials
#               uses: aws-actions/configure-aws-credentials@v1-node16
#               with:
#                   role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ env.AWS_ROLE_NAME }}
#                   aws-region: ${{ env.AWS_REGION }}

#             - name: Login to Amazon ECR
#               id: login-ecr
#               uses: aws-actions/amazon-ecr-login@v1

#             - name: build and push docker image
#               uses: docker/build-push-action@v2
#               id: build-image
#               with:
#                   push: true
#                   file: ./Dockerfile
#                   tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
#                   cache-from: type=local,src=/tmp/.buildx-cache
#                   cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

#             - name: deploy lambda function
#               env:
#                   ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#               run: |
#                   aws lambda update-function-code --function-name ${{ env.LAMBDA_FUNCTION_NAME }} --image-uri $ECR_REGISTRY/${{ env.SERVICE_NAME }}:${{ github.sha }}

#             - name: Move cache
#               run: |
#                   rm -rf /tmp/.buildx-cache
#                   mv /tmp/.buildx-cache-new /tmp/.buildx-cache
